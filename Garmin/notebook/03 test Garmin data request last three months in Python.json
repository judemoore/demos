{
	"name": "03 test Garmin data request last three months in Python",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "08d70a3c-35e4-44cb-a9c3-1e02d6dbb3cd"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# Python 3 API wrapper for Garmin Connect\r\n",
					"#  az login within the environment Powershell to log into Azure so Key Vault can authenticate the request using Entra ID\r\n",
					"# Install the package using pip: pip3 install garminconnect azure-identity azure-keyvault-secrets azure-keyvault\r\n",
					"# Comment out the KeyVaultRequest line if hard-coding your Garmin credentials\r\n",
					"\r\n",
					"import garminconnect\r\n",
					"from datetime import datetime, timedelta\r\n",
					"\r\n",
					"\r\n",
					"def main():\r\n",
					"    try:\r\n",
					"        # Get API password from Key Vault. Replace with hard-coded values to avoid the KeyVault request\r\n",
					"        # Garmin_Username = \"My Garmin email/login\"\r\n",
					"        Garmin_Username = \"\"\r\n",
					"        # Garmin_Username = \"My Garmin password\"\r\n",
					"        Garmin_Password = \"\"\r\n",
					"\r\n",
					"        if not Garmin_Username:\r\n",
					"            print(\"Garmin_Username retrieval/initialisation failed. Check your Key Vault configuration/python.\")\r\n",
					"            return\r\n",
					"        \r\n",
					"        if not Garmin_Password:\r\n",
					"            print(\"Garmin_Password retrieval/initialisation failed. Check your Key Vault configuration/python.\")\r\n",
					"            return\r\n",
					"\r\n",
					"        # Initialize Garmin Connect client\r\n",
					"        client = garminconnect.Garmin(Garmin_Username, Garmin_Password)\r\n",
					"        client.login()\r\n",
					"\r\n",
					"        # Calculate start and end dates for the last three months\r\n",
					"        today = datetime.today()\r\n",
					"        three_months_ago = today - timedelta(days=90)\r\n",
					"\r\n",
					"        # Example: Get activity data for the last three months\r\n",
					"        activities_data = client.get_activities_by_date(three_months_ago.strftime(\"%Y-%m-%d\"), today.strftime(\"%Y-%m-%d\"))\r\n",
					"        print(f\"Activities data for the last three months: {activities_data}\")\r\n",
					"\r\n",
					"        # # Example: Get body composition data for the last three months\r\n",
					"        # body_composition_data = client.get_body_composition_data(three_months_ago.strftime(\"%Y-%m-%d\"), today.strftime(\"%Y-%m-%d\"))\r\n",
					"        # print(f\"Body composition data for the last three months: {body_composition_data}\")\r\n",
					"\r\n",
					"        # Add more API calls as needed for other statistics and activities\r\n",
					"\r\n",
					"    except Exception as e:\r\n",
					"        print(f\"Error: {e}\")\r\n",
					"\r\n",
					"if __name__ == \"__main__\":\r\n",
					"    main()\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}